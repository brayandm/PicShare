
name: PicShare

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:

    runs-on:
    - picshare-runner

    steps:

    - name: Deleting the repository
      run: rm -R Testing
    - uses: actions/checkout@v3
      with:
        path: Testing/
    - name: Building the images
      run: cd Testing && ./vendor/bin/sail build --no-cache
    - name: Installing dependencies
      run: cd Testing && COMPOSER_ALLOW_SUPERUSER=1 composer install
    - name: Copying .env.example to .env
      run: cd Testing && cp .env.example .env
    - name: Stopping apache server
      run: sudo service apache2 stop
    - name: Directory Permissions
      run: chmod -R 777 Testing/
    - name: Mounting the server
      run: cd Testing && ./vendor/bin/sail up -d
    - name: Clearing cache
      run: cd Testing && ./vendor/bin/sail artisan cache:clear && ./vendor/bin/sail artisan config:clear
    - name: Generate key
      run: cd Testing && ./vendor/bin/sail artisan key:generate
    - name: Migrating the database
      run: cd Testing && ./vendor/bin/sail artisan migrate --force

  test:

    needs: build

    runs-on:
    - picshare-runner

    steps:
    - name: Testing
      run: cd Testing && ./vendor/bin/sail artisan test

  deploy:

    # if: endsWith(github.event.head_commit.message, '--deploy')

    needs: test

    runs-on:
    - picshare-runner

    steps:
    - name: Dismounting the server
      run: cd Production && ./vendor/bin/sail down
    - name: Deleting the repository
      run: rm -R Production
    - uses: actions/checkout@v3
      with:
        clean: false
        path: Production/
    - name: Building the images
      run: cd Production && ./vendor/bin/sail build --no-cache
    - name: Installing dependencies
      run: cd Production && COMPOSER_ALLOW_SUPERUSER=1 composer install
    - name: Setting up docker compose
      run: cd Production && cp -f docker-compose.prod.yml docker-compose.yml
    - name: Setting up production environment
      run: cd Production && echo "${{ secrets.WEBSITE_ENV_PRODUCTION }}" > .env
    - name: Directory Permissions
      run: chmod -R 777 Production/
    - name: Mounting the server
      run: cd Production && ./vendor/bin/sail up -d
    - name: Clearing cache
      run: cd Production && ./vendor/bin/sail artisan cache:clear && ./vendor/bin/sail artisan config:clear
    - name: Generate key
      run: cd Production && ./vendor/bin/sail artisan key:generate
    - name: Migrating the database
      run: cd Production && ./vendor/bin/sail artisan migrate --force
